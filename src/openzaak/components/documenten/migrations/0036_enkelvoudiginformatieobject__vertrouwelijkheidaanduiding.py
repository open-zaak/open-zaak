# SPDX-License-Identifier: EUPL-1.2
# Copyright (C) 2025 Dimpact
# Generated by Django 5.1.7 on 2025-04-15 07:31

import vng_api_common.fields
from django.db import migrations
from vng_api_common.constants import VA_MAPPING, REVERSE_VA_MAPPING
import logging

logger = logging.getLogger(__name__)


def populate_eio_vertrouwelijkheidaanduiding_integer_field(apps, schema_editor):
    EnkelvoudigInformatieObject = apps.get_model(
        "documenten", "EnkelvoudigInformatieObject"
    )
    BATCH_SIZE = 2000
    processed = 0
    total = EnkelvoudigInformatieObject.objects.count()
    batch = []
    for instance in EnkelvoudigInformatieObject.objects.iterator():
        if not (max_va := VA_MAPPING.get(instance.vertrouwelijkheidaanduiding)):
            continue

        instance._vertrouwelijkheidaanduiding = max_va
        batch.append(instance)

        if len(batch) >= BATCH_SIZE:
            EnkelvoudigInformatieObject.objects.bulk_update(
                batch, ["_vertrouwelijkheidaanduiding"]
            )
            batch.clear()
            processed += BATCH_SIZE
            logger.info(
                "Processed %s / %s EnkelvoudigInformatieObjecten", processed, total
            )

    # Handle final batch
    if batch:
        EnkelvoudigInformatieObject.objects.bulk_update(
            batch, ["_vertrouwelijkheidaanduiding"]
        )


def populate_eio_vertrouwelijkheidaanduiding_char_field(apps, schema_editor):
    EnkelvoudigInformatieObject = apps.get_model(
        "documenten", "EnkelvoudigInformatieObject"
    )
    BATCH_SIZE = 2000
    processed = 0
    queryset = EnkelvoudigInformatieObject.objects.filter(
        vertrouwelijkheidaanduiding=""
    )
    total = queryset.count()
    batch = []
    for instance in queryset.iterator():
        if not (
            max_va := REVERSE_VA_MAPPING.get(instance._vertrouwelijkheidaanduiding)
        ):
            continue

        instance.vertrouwelijkheidaanduiding = max_va
        batch.append(instance)

        if len(batch) >= BATCH_SIZE:
            EnkelvoudigInformatieObject.objects.bulk_update(
                batch, ["vertrouwelijkheidaanduiding"]
            )
            batch.clear()
            processed += BATCH_SIZE
            logger.info(
                "Processed %s / %s EnkelvoudigInformatieObjecten", processed, total
            )

    # Handle final batch
    if batch:
        EnkelvoudigInformatieObject.objects.bulk_update(
            batch, ["vertrouwelijkheidaanduiding"]
        )


class Migration(migrations.Migration):

    dependencies = [
        ("documenten", "0035_alter_bestandsdeel_omvang_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="enkelvoudiginformatieobject",
            name="_vertrouwelijkheidaanduiding",
            field=vng_api_common.fields.VertrouwelijkheidsAanduidingFieldInt(
                blank=True,
                choices=[
                    (10, "Openbaar"),
                    (20, "Beperkt openbaar"),
                    (30, "Intern"),
                    (40, "Zaakvertrouwelijk"),
                    (50, "Vertrouwelijk"),
                    (60, "Confidentieel"),
                    (70, "Geheim"),
                    (80, "Zeer geheim"),
                ],
                db_index=True,
                help_text="Aanduiding van de mate waarin zaakdossiers van ZAAKen van dit ZAAKTYPE voor de openbaarheid bestemd zijn. Indien de zaak bij het aanmaken geen vertrouwelijkheidaanduiding krijgt, dan wordt deze waarde gezet.",
                null=True,
                verbose_name="vertrouwelijkheidaanduiding",
            ),
        ),
        migrations.RunPython(
            populate_eio_vertrouwelijkheidaanduiding_integer_field,
            populate_eio_vertrouwelijkheidaanduiding_char_field,
        ),
    ]
